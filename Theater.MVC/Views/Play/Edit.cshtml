@model Theater.MVC.Models.EditPlayViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Play", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>PlayViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new {Model.Title, htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img src="@Html.DisplayFor(model => model.ImageVirtualPath)" alt="Display image..." style="width:200px; height: 200px; padding-bottom: 10px;">
                @Html.TextBox("file", null, htmlAttributes: new { Type = "file" })
                @Html.ValidationMessageFor(model => model.File, null, new { @class = "text-danger", id = "upload" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new {Model.Description, htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ScheduledTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.ScheduledTime)
                @Html.EditorFor(model => model.ScheduledTime, new {Model.ScheduledTime, htmlAttributes = new { type = "datetime-local", @class = "form-control" } })

                @Html.ValidationMessageFor(model => model.ScheduledTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActorsString, "Actors", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.ActorsString)
                @Html.ValidationMessageFor(model => model.SelectedActorsIds, null, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AllActors, "Pick new actors", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedActorsIds, new MultiSelectList(Model.AllActors, "Id", "FullName"), new { @class = "form-control", multiple = "multiple", name = "actorsDropdown", style = "padding-bottom: 10px" })
                @Html.ValidationMessageFor(model => model.SelectedActorsIds, null, new { @class = "text-danger", id = "actorsValidate" })
            </div>
        </div>

        @Html.EditorFor(model => model.ImagePath, new { Model.ImagePath, htmlAttributes = new { type = "hidden" } })
        @Html.EditorFor(model => model.ImageVirtualPath, new { Model.ImageVirtualPath, htmlAttributes = new { type = "hidden" } })
        @Html.EditorFor(model => model.ImageType, new { Model.ImageType, htmlAttributes = new { type = "hidden" } })
        @Html.EditorFor(model => model.ScheduledTime, new { Model.ScheduledTime, htmlAttributes = new { type = "hidden" } })


        <div class="form-group">
            <div class="col-md-offset-4">
                <input type="submit" value="Save changes" class="btn btn-default" />
                @Html.ActionLink("Cancel", "Details", new { id = Model.Id }, new { role = "button", @class = "btn btn-default" })
            </div>
        </div>


    </div>
}


